User Guide: Building and Running XIVOTPGenerator Java Class
Prerequisites and XIVLauncher Configuration
Before you begin, ensure that you have the following installed on your system:

Java Development Kit (JDK): You need JDK installed to compile and run Java programs.
Command Line Interface (CLI): You'll use the command line to execute javac and java commands.

Make sure that you have XIVLauncher installed on your system. You can download it from the official website if you haven't already.

Enable XL Authenticator App / OTP Macro Support:
Open XIVLauncher.
Click on the "Settings" option.
Under the "Game" tab, check the box that says "Enable XL Authenticator App / OTP Macro support." This setting allows the launcher to accept OTPs generated by external applications like XIVOTPGenerator.
Auto Login: "Auto Login" must be enabled in XIVLauncher. This setting ensures that XIVLauncher will automatically log you in without requiring user input

Step 1: Save XIVOTPGenerator Class
Save the XIVOTPGenerator.java file containing the Java class on your local machine. Make sure the file is saved with the same name and extension (.java).

Step 2: Open Command Prompt or Terminal
Open your command prompt (Windows) or terminal (macOS/Linux). You will use this interface to compile and run the Java program.

Step 3: Navigate to the Directory
Use the cd command to navigate to the directory where you saved the XIVOTPGenerator.java file.

Example (on Windows):
cd path\to\directory

Example (on macOS/Linux):
cd /path/to/directory

Step 4: Compile the Java Program
Compile the XIVOTPGenerator.java file using the javac command:
javac XIVOTPGenerator.java

this command will generate a file named XIVOTPGenerator.class

Step 5: Run the Java Program
Once the compilation is successful, you can run the XIVOTPGenerator class using the java command:
java XIVOTPGenerator

Step 6: Follow the Program Instructions
The program will start running and perform the following tasks:

Load the OTP secret key from the configuration file (otp_config.cfg). If the configuration file does not exist, it will create one with a default secret.
Launch the XIVLauncher executable.
Generate a One-Time Password (OTP) based on the loaded secret key.
Simulate typing the OTP into the active window (XIVLauncher).
Please follow any on-screen instructions and ensure that your secret key is correctly configured in the otp_config.cfg file.

Step 7: Configuring your Secret
Go to MogStation, log in, and go to the One Time Password page. Click on the "Software Authenticator" button at the bottom. Another button "Software Authenticator Registration" will appear, press it.

Step 7.1: Getting Secret from QR code:
On this screen, a QR Code will appear. Right click the image and save it to somewhere on your PC, like your desktop.

Step 7.2: Putting the QR code into an app like authy ( backup incase of issues):
Now before we do anything else, lets get this into a legit authenticator app so you can still use it if something goes wrong.

Step 7.3: Get Secret from QR code:
My go to website for prasing QR codes is https://nimiq.github.io/qr-scanner/demo/
Once the page is loaded you should see "Scan from File" at the bottom, Load your QR code
You should see something Similar to the following.
otpauth://totp/Square%20Enix%20ID:kaynub?secret=00000000000000000000000000&issuer=Square%20Enix%20ID&algorithm=SHA1&digits=6&period=30
You want to then copy your secret and paste it into otp_config.cfg and save the file

Step 8: Exit the Program
After the program completes its tasks, it will exit automatically.

Step 9: Build a JAR File
To package the OTPGenerator Java application into a JAR (Java Archive) file, you can use the jar command with a manifest file that specifies the main class. Here are the steps to create the JAR file:
jar cfm OTPGenerator.jar manifest.txt *.class

Step 10: Running a JAR File:
java -jar XIVOTPGenerator.jar

Note:
Ensure that you have the necessary permissions to access the directory and execute Java commands.
Make sure your Java installation is properly configured.
The program validates the secret key in the configuration file; please ensure it's correctly configured.
The program uses a default secret key ("SECRETHERE") if the configuration file is missing.
